<?php

use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\Core\Entity\EntityInterface;

/**
 * @file
 * Primary module hooks for Contact entity module.
 */

function contact_entity_entity_load(array $entities, $entity_type_id) {
  foreach ($entities as $entity) {
    if ($entity_type_id === 'contact_entity') {
      $label = $entity->label->value;
      \Drupal::messenger()->addStatus(t('Entity with the name is loaded ' . $label));
      $listDefinition = \Drupal::typedDataManager()->createListDataDefinition('string');
    $list = \Drupal::typedDataManager()->create($listDefinition, ['blake@drupalize.me', 'support@example.com', 'noreply@example.com']);
    $serializer = \Drupal::service('serializer');
    \Drupal::messenger()->addStatus(t('Example list definitions ') . $serializer->serialize($list, 'json'));
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function contact_entity_contact_entity_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {
  // Count the number of times the current contact_entity has been viewed this session.
  $session = \Drupal::request()->getSession();
  $current_counts = $session->get('contact_entity.view_counts', array());
  if (!isset($current_counts[$entity->id()])) {
    $current_counts[$entity->id()] = 1;
  }
  else {
    $current_counts[$entity->id()]++;
  }
  $session->set('contact_entity.view_counts', $current_counts);

  $module_handler = \Drupal::moduleHandler();
  $module_handler->invokeAll('contact_entity_count_incremented', array($current_counts[$entity->id()], $entity));
  $module_handler->alter('contact_entity_count_incremented', $current_counts);
}

function contact_entity_entity_storage_load(array $entities, $entity_type) {
  if ($entity_type == 'contact_entity') {
    foreach ($entities as $entity) {
      $label = $entity->label->value;
      \Drupal::messenger()->addStatus(t('Entity in storage with the name is loaded ' . $label));
    }
  }
}

function contact_entity_entity_preload(array $ids, $entity_type_id) {
  if ($entity_type_id == 'contact_entity') {
    $entities = [];
    foreach ($ids as $id) {
      $entities[] = $id;
    }
  }
}
/*
function contact_entity_entity_prepare_view($entity_type_id, array $entities, array $displays, $view_mode) {
  if (!empty($entities) && $entity_type_id == 'contact_entity') {
    $ids = array();
    foreach ($entities as $id => $entity) {
      if ($displays[$entity->bundle()]->getComponent('mymodule_addition')) {
        $ids[] = $id;
      }
    }
     if ($ids) {
      $nodes = mymodule_get_user_nodes($ids);
      foreach ($ids as $id) {
        $entities[$id]->user_node = $nodes[$id];
      }
    }
  }
} */

function contact_entity_contact_entity_prepare_form(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Form\FormStateInterface $form_state) {
  if ($operation == 'edit') {
    $entity->label->value = 'Altered label';
    $form_state->set('label_altered', TRUE);
  }
}

// Change the user interface label for user accounts to 'Full account'.
function contact_entity_entity_bundle_info_alter(&$bundles) {
  $bundles['user']['user']['label'] = t('Full account');
}


/**
 * Implements hook_contact_entity_count_incremented().
 */
function contact_entity_contact_entity_count_incremented($count, $entity) {
  $messenger = \Drupal::messenger();
  $messenger->addStatus(t('This is the first time you have viewed the contact entity %count.', array('%count' => $count, '%title' => $entity->label())));
}
